@startuml
!define interfaceStyle class

' Classes de Estado do Pedido
abstract class PedidoEstado {
    + {static} getInstance()
    + getEstado(): String
    + Processamento(pedido: Pedido): String
    + setProximoEstadoNaCadeia(estado: PedidoEstado)
    ' Métodos específicos de cada estado, se houver
    + preparar(pedido: Pedido): String
    + transportar(pedido: Pedido): String
    + entregue(pedido: Pedido): String
}

class PedidoEmProcesso {
    - {static} instance
    - PedidoEmProcesso()
    + {static} getInstance(): PedidoEmProcesso
    + getEstado(): String
    + Processamento(pedido: Pedido): String
    + preparar(pedido: Pedido): String
}

class PedidoEmPreparo {
    - {static} instance
    - PedidoEmPreparo()
    + {static} getInstance(): PedidoEmPreparo
    + getEstado(): String
    + Processamento(pedido: Pedido): String
    + transportar(pedido: Pedido): String
}

class PedidoEmTransporte {
    - {static} instance
    - PedidoEmTransporte()
    + {static} getInstance(): PedidoEmTransporte
    + getEstado(): String
    + Processamento(pedido: Pedido): String
    + entregue(pedido: Pedido): String
}

class PedidoEntregue {
    - {static} instance
    - PedidoEntregue()
    + {static} getInstance(): PedidoEntregue
    + getEstado(): String
    + Processamento(pedido: Pedido): String
}

' Classes de Forma de Pagamento
interface FormaPagamento {
    + tipoPagamento(): String
}

class FormaCartaoCredito {
    + tipoPagamento(): String
}

class FormaCartaoDebito {
    + tipoPagamento(): String
}

class FormaPix {
    + tipoPagamento(): String
}

class FormaSaldoConta {
    + tipoPagamento(): String
}

' Classe Pedido
class Pedido {
    - processoAtual: PedidoEstado
    - usuario: Usuario
    - formaPagamento: FormaPagamento
    + Pedido(usuario: Usuario)
    - configurarCadeiaDeEstados()
    + getProcessoAtual(): PedidoEstado
    + setProcessoAtual(processoAtual: PedidoEstado)
    + updateEstado()
    + iniciarProcessamentoCadeia(): String
    + tipoPagamento(formaPagamento: FormaPagamento): String
    + toString(): String
}

class Usuario {
    - nome: String
    - ultimaNotificacao: String
    + Usuario(nome: String)
    + getUltimaNotificacao(): String
    + update(o: Observable, arg: Object)
}

PedidoEmProcesso --|> PedidoEstado
PedidoEmPreparo --|> PedidoEstado
PedidoEmTransporte --|> PedidoEstado
PedidoEntregue --|> PedidoEstado

FormaCartaoCredito ..|> FormaPagamento
FormaCartaoDebito ..|> FormaPagamento
FormaPix ..|> FormaPagamento
FormaSaldoConta ..|> FormaPagamento

Pedido "1" *-- "1" PedidoEstado
Pedido "1" --> "1" Usuario
Pedido "1" -- "1" FormaPagamento
PedidoEstado "1" -- "1" PedidoEstado


java.util.Observable <|-- Pedido

java.util.Observer <|-- Usuario

@enduml